{"mappings":";;;;;;;;;;;;;;;;AAAA;;;;;;;;;;CAUC;;;;;;;AA2BM,MAAM,0DAAqB,CAAA,GAAA,0BAAY,EAA+D;AAE7G,MAAM;AAON,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBN,MAAM;;;;;;;;AAQC,MAAM,0DAAc,CAAA,GAAA,uBAAS,EAAE,SAAS,YAAY,KAAuB,EAAE,GAA2B;IAC7G,CAAC,OAAO,IAAI,GAAG,CAAA,GAAA,iDAAsB,EAAE,OAAO,KAAK;IACnD,IAAI,SAAS,CAAA,GAAA,mCAAQ,EAAE;IACvB,IAAI,YAAC,QAAQ,SAAE,KAAK,QAAE,OAAO,YAAI,MAAM,gBAAE,YAAY,oBAAE,gBAAgB,EAAE,GAAG,YAAW,GAAG;IAC1F,IAAI,cAAC,UAAU,cAAE,UAAU,EAAC,GAAG,CAAA,GAAA,yBAAO,EAAE;QACtC,GAAG,KAAK;QACR,kBAAkB;IACpB;IAEA,qBACE,gCAAC,CAAA,GAAA,uCAAY,EAAE,QAAQ;QAAC,OAAO;YAAC,QAAQ;kBAAQ;YAAM,kBAAkB;QAAI;kBAC1E,cAAA,iCAAC;YACC,KAAK;YACJ,GAAG,CAAA,GAAA,oCAAa,EAAE,WAAW;YAC7B,GAAG,UAAU;YACd,MAAK;YACL,WAAW,AAAC,CAAA,oBAAoB,EAAC,IAAK,gCAAU,MAAM;YACtD,OAAO;gBACL,GAAG,YAAY;gBACf,UAAU,OAAO,KAAK;YACxB;;gBACC;gBACA,uBAAS,gCAAC;oBAAM,GAAG,UAAU;oBAAE,WAAW,2BAAK;wBAAC,MAAM,OAAO;oBAAK;8BAAK;;;;;AAIhF","sources":["packages/@react-spectrum/s2/src/AvatarGroup.tsx"],"sourcesContent":["/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMProps, DOMRef, DOMRefValue} from '@react-types/shared';\nimport {AvatarContext} from './Avatar';\nimport {ContextValue, SlotProps} from 'react-aria-components';\nimport {createContext, CSSProperties, forwardRef, ReactNode} from 'react';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {getAllowedOverrides, StylesPropWithoutWidth, UnsafeStyles} from './style-utils' with {type: 'macro'};\nimport {style} from '../style' with {type: 'macro'};\nimport {useDOMRef} from '@react-spectrum/utils';\nimport {useLabel} from 'react-aria';\nimport {useSpectrumContextProps} from './useSpectrumContextProps';\n\nexport interface AvatarGroupProps extends UnsafeStyles, DOMProps, AriaLabelingProps, SlotProps {\n  /** Avatar children of the avatar group. */\n  children: ReactNode,\n  /** The label for the avatar group. */\n  label?: string,\n  /**\n   * The size of the avatar group.\n   * @default 24\n   */\n  size?: 16 | 20 | 24 | 28 | 32 | 36 | 40,\n  /** Spectrum-defined styles, returned by the `style()` macro. */\n  styles?: StylesPropWithoutWidth\n}\n\nexport const AvatarGroupContext = createContext<ContextValue<AvatarGroupProps, DOMRefValue<HTMLDivElement>>>(null);\n\nconst avatar = style({\n  marginStart: {\n    default: '[calc(var(--size) / -4)]',\n    ':first-child': 0\n  }\n});\n\nconst text = style({\n  marginStart: 8,\n  truncate: true,\n  font: {\n    size: {\n      16: 'ui-xs',\n      20: 'ui-sm',\n      24: 'ui',\n      28: 'ui-lg',\n      32: 'ui-xl',\n      36: 'ui-2xl',\n      40: 'ui-3xl'\n    }\n  }\n});\n\nconst container = style({\n  display: 'flex',\n  alignItems: 'center'\n}, getAllowedOverrides({width: false}));\n\n/**\n * An avatar group is a grouping of avatars that are related to each other.\n */\nexport const AvatarGroup = forwardRef(function AvatarGroup(props: AvatarGroupProps, ref: DOMRef<HTMLDivElement>) {\n  [props, ref] = useSpectrumContextProps(props, ref, AvatarGroupContext);\n  let domRef = useDOMRef(ref);\n  let {children, label, size = 24, styles, UNSAFE_style, UNSAFE_className, ...otherProps} = props;\n  let {labelProps, fieldProps} = useLabel({\n    ...props,\n    labelElementType: 'span'\n  });\n\n  return (\n    <AvatarContext.Provider value={{styles: avatar, size, isOverBackground: true}}>\n      <div\n        ref={domRef}\n        {...filterDOMProps(otherProps)}\n        {...fieldProps}\n        role=\"group\"\n        className={(UNSAFE_className ?? '') + container(null, styles)}\n        style={{\n          ...UNSAFE_style,\n          '--size': size / 16 + 'rem'\n        } as CSSProperties}>\n        {children}\n        {label && <span {...labelProps} className={text({size: String(size)})}>{label}</span>}\n      </div>\n    </AvatarContext.Provider>\n  );\n});\n"],"names":[],"version":3,"file":"AvatarGroup.cjs.map"}