{"mappings":";;;;;;;;;;;;AAAA;;;;;;;;;;CAUC;AAIM,MAAM,kDAAsB,CAAA,GAAA,sBAAQ;IAMzC,OAAO,2BAA2B;QAChC,6DAA6D;QAC7D,OAAO;YAAC,UAAU;QAAI;IACxB;IAEA,SAAS;QACP,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EACrB,wCAAwC;QACxC,qBAAO,0DAAC,aAAK,IAAI,CAAC,KAAK,CAAC,OAAO;QAGjC,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;IAC5B;IAjBA,YAAY,KAAK,CAAE;QACjB,KAAK,CAAC;QACN,IAAI,CAAC,KAAK,GAAG;YAAC,UAAU;QAAK;IAC/B;AAeF","sources":["packages/@react-spectrum/story-utils/src/ErrorBoundary.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, {Component, ReactNode} from 'react';\n\nexport class ErrorBoundary extends Component<{message: string, children: ReactNode}, {hasError: boolean}> {\n  constructor(props) {\n    super(props);\n    this.state = {hasError: false};\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return {hasError: true};\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <div>{this.props.message}</div>;\n    }\n\n    return this.props.children;\n  }\n}\n"],"names":[],"version":3,"file":"ErrorBoundary.main.js.map"}