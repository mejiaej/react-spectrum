{"mappings":";;;;;;;AAAA;;;;;;;;;;CAUC,GAED;;;CAGC,GACM,SAAS,0CAAe,QAAgB,GAAG;IAChD,KAAK,KAAK,CAAC,OAAO,MAAM,EAAE,SAAS,OAAO,kBAAkB,CAAC,IAAM,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,OAAO,IAAI;AAClG;AAMO,SAAS,0CAAgB,QAAgB,GAAG;IACjD,KAAK,KAAK,CAAC,OAAO,MAAM,EAAE,SAAS,OAAO,kBAAkB,CAAC,IAAM,KAAK,GAAG,CAAC,OAAO;AACrF","sources":["packages/@react-spectrum/test-utils/src/testSetup.ts"],"sourcesContent":["/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/**\n * Mocks screen width to simulate mobile experience, useful for testing Tray rendering.\n * @param width Optional width to apply. Automatically clamped to the maximum value allowed for mobile rendering.\n */\nexport function simulateMobile(width: number = 700): void {\n  jest.spyOn(window.screen, 'width', 'get').mockImplementation(() => Math.min(Math.max(width, 0), 700));\n}\n\n/**\n * Mocks screen width to simulate standard desktop experience.\n * @param width Optional width to apply. Automatically clamped to the minimum value allowed for desktop rendering.\n */\nexport function simulateDesktop(width: number = 701): void {\n  jest.spyOn(window.screen, 'width', 'get').mockImplementation(() => Math.max(width, 701));\n}\n"],"names":[],"version":3,"file":"testSetup.main.js.map"}