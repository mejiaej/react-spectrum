{"mappings":";;AAAA;;;;;;;;;;CAUC,GAED;;CAEC,GACM,SAAS;IACd,IAAI,gBAAgB;IACpB,UAAU;QACR,eAAO,UAAU,GAAG,MAAM,uBAAuB;YAM/C,IAAI,QAAQ;gBACV,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK;YACzB;YACA,IAAI,QAAQ;gBACV,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK;YACzB;YATA,YAAY,IAAI,EAAE,IAAI,CAAE;gBACtB,KAAK,CAAC,MAAM;gBACZ,IAAI,CAAC,KAAK,GAAG;YACf;QAOF;IACF;IACA,SAAS;QACP,eAAO,UAAU,GAAG;IACtB;AACF;AAEO,SAAS;IACd,UAAU;QACR,aAAa;QACb,eAAO,YAAY,GAAG,MAAM,yBAAyB;YAMnD,IAAI,cAAc;oBACT;gBAAP,OAAO,CAAA,0BAAA,IAAI,CAAC,KAAK,CAAC,WAAW,cAAtB,qCAAA,0BAA0B;YACnC;YACA,IAAI,YAAY;gBACd,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS;YAC7B;YACA,IAAI,QAAQ;gBACV,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK;YACzB;YACA,IAAI,QAAQ;gBACV,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK;YACzB;YACA,IAAI,QAAQ;gBACV,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK;YACzB;YACA,IAAI,SAAS;gBACX,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM;YAC1B;YArBA,YAAY,IAAI,EAAE,IAAI,CAAE;gBACtB,KAAK,CAAC,MAAM;gBACZ,IAAI,CAAC,KAAK,GAAG;YACf;QAmBF;IACF;IACA,SAAS;QACP,aAAa;QACb,OAAO,eAAO,YAAY;IAC5B;AACF","sources":["packages/@react-aria/test-utils/src/testSetup.ts"],"sourcesContent":["/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/**\n * Enables reading pageX/pageY from fireEvent.mouse*(..., {pageX: ..., pageY: ...}).\n */\nexport function installMouseEvent() {\n  let oldMouseEvent = MouseEvent;\n  beforeAll(() => {\n    global.MouseEvent = class FakeMouseEvent extends MouseEvent {\n      _init: {pageX: number, pageY: number};\n      constructor(name, init) {\n        super(name, init);\n        this._init = init;\n      }\n      get pageX() {\n        return this._init.pageX;\n      }\n      get pageY() {\n        return this._init.pageY;\n      }\n    };\n  });\n  afterAll(() => {\n    global.MouseEvent = oldMouseEvent;\n  });\n}\n\nexport function installPointerEvent() {\n  beforeAll(() => {\n    // @ts-ignore\n    global.PointerEvent = class FakePointerEvent extends MouseEvent {\n      _init: {pageX: number, pageY: number, pointerType: string, pointerId: number, width: number, height: number};\n      constructor(name, init) {\n        super(name, init);\n        this._init = init;\n      }\n      get pointerType() {\n        return this._init.pointerType ?? 'mouse';\n      }\n      get pointerId() {\n        return this._init.pointerId;\n      }\n      get pageX() {\n        return this._init.pageX;\n      }\n      get pageY() {\n        return this._init.pageY;\n      }\n      get width() {\n        return this._init.width;\n      }\n      get height() {\n        return this._init.height;\n      }\n    };\n  });\n  afterAll(() => {\n    // @ts-ignore\n    delete global.PointerEvent;\n  });\n}\n"],"names":[],"version":3,"file":"testSetup.module.js.map"}