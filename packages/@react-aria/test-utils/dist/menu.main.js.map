{"mappings":"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","sources":["packages/@react-aria/test-utils/src/menu.ts"],"sourcesContent":["/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {act, waitFor, within} from '@testing-library/react';\nimport {BaseTesterOpts, UserOpts} from './user';\nimport {triggerLongPress} from './events';\n\nexport interface MenuOptions extends UserOpts, BaseTesterOpts {\n  user?: any,\n  isSubmenu?: boolean\n}\nexport class MenuTester {\n  private user;\n  private _interactionType: UserOpts['interactionType'];\n  private _advanceTimer: UserOpts['advanceTimer'];\n  private _trigger: HTMLElement | undefined;\n  private _isSubmenu: boolean = false;\n\n  constructor(opts: MenuOptions) {\n    let {root, user, interactionType, advanceTimer, isSubmenu} = opts;\n    this.user = user;\n    this._interactionType = interactionType || 'mouse';\n    this._advanceTimer = advanceTimer;\n\n    // Handle case where a submenu trigger is provided to the tester\n    if (root.getAttribute('role') === 'menuitem') {\n      this._trigger = root;\n    } else {\n      // Handle case where element provided is a wrapper of the trigger button\n      let trigger = within(root).queryByRole('button');\n      if (trigger) {\n        this._trigger = trigger;\n      } else {\n        this._trigger = root;\n      }\n    }\n\n    this._isSubmenu = isSubmenu || false;\n  }\n\n  setInteractionType = (type: UserOpts['interactionType']) => {\n    this._interactionType = type;\n  };\n\n  // TODO: this has been common to select as well, maybe make select use it? Or make a generic method. Will need to make error messages generic\n  // One difference will be that it supports long press as well\n  open = async (opts: {needsLongPress?: boolean, interactionType?: UserOpts['interactionType'], direction?: 'up' | 'down'} = {}) => {\n    let {\n      needsLongPress,\n      interactionType = this._interactionType,\n      direction\n    } = opts;\n    let trigger = this.trigger;\n    let isDisabled = trigger.hasAttribute('disabled');\n    if (interactionType === 'mouse' || interactionType === 'touch') {\n      if (needsLongPress) {\n        if (this._advanceTimer == null) {\n          throw new Error('No advanceTimers provided for long press.');\n        }\n        let pointerType = interactionType === 'mouse' ? 'mouse' : 'touch';\n        await triggerLongPress({element: trigger, advanceTimer: this._advanceTimer, pointerOpts: {pointerType}});\n      } else if (interactionType === 'mouse') {\n        await this.user.click(trigger);\n      } else {\n        await this.user.pointer({target: trigger, keys: '[TouchA]'});\n      }\n    } else if (interactionType === 'keyboard' && !isDisabled) {\n      if (direction === 'up') {\n        act(() => trigger.focus());\n        await this.user.keyboard('[ArrowUp]');\n      } else if (direction === 'down') {\n        act(() => trigger.focus());\n        await this.user.keyboard('[ArrowDown]');\n      } else {\n        act(() => trigger.focus());\n        await this.user.keyboard('[Enter]');\n      }\n    }\n\n    await waitFor(() => {\n      if (trigger.getAttribute('aria-controls') == null && !isDisabled) {\n        throw new Error('No aria-controls found on menu trigger element.');\n      } else {\n        return true;\n      }\n    });\n    if (!isDisabled) {\n      let menuId = trigger.getAttribute('aria-controls');\n      await waitFor(() => {\n        if (!menuId || document.getElementById(menuId) == null) {\n          throw new Error(`Menu with id of ${menuId} not found in document.`);\n        } else {\n          return true;\n        }\n      });\n    }\n  };\n\n  // TODO: also very similar to select, barring potential long press support\n  // Close on select is also kinda specific?\n  selectOption = async (opts: {\n    option?: HTMLElement,\n    optionText?: string,\n    menuSelectionMode?: 'single' | 'multiple',\n    needsLongPress?: boolean,\n    closesOnSelect?: boolean,\n    interactionType?: UserOpts['interactionType'],\n    keyboardActivation?: 'Space' | 'Enter'\n  }) => {\n    let {\n      optionText,\n      menuSelectionMode = 'single',\n      needsLongPress,\n      closesOnSelect = true,\n      option,\n      interactionType = this._interactionType,\n      keyboardActivation = 'Enter'\n    } = opts;\n    let trigger = this.trigger;\n\n    if (!trigger.getAttribute('aria-controls') && !trigger.hasAttribute('aria-expanded')) {\n      await this.open({needsLongPress});\n    }\n\n    let menu = this.menu;\n    if (menu) {\n      if (!option && optionText) {\n        option = (within(menu!).getByText(optionText).closest('[role=menuitem], [role=menuitemradio], [role=menuitemcheckbox]'))! as HTMLElement;\n      }\n      if (!option) {\n        throw new Error('No option found in the menu.');\n      }\n\n      if (interactionType === 'keyboard') {\n        if (document.activeElement !== menu || !menu.contains(document.activeElement)) {\n          act(() => menu.focus());\n        }\n\n        await this.keyboardNavigateToOption({option});\n        await this.user.keyboard(`[${keyboardActivation}]`);\n      } else {\n        if (interactionType === 'mouse') {\n          await this.user.click(option);\n        } else {\n          await this.user.pointer({target: option, keys: '[TouchA]'});\n        }\n      }\n      act(() => {jest.runAllTimers();});\n\n      if (option && option.getAttribute('href') == null && option.getAttribute('aria-haspopup') == null && menuSelectionMode === 'single' && closesOnSelect && keyboardActivation !== 'Space' && !this._isSubmenu) {\n        await waitFor(() => {\n          if (document.activeElement !== trigger) {\n            throw new Error(`Expected the document.activeElement after selecting an option to be the menu trigger but got ${document.activeElement}`);\n          } else {\n            return true;\n          }\n        });\n\n        if (document.contains(menu)) {\n          throw new Error('Expected menu element to not be in the document after selecting an option');\n        }\n      }\n    } else {\n      throw new Error(\"Attempted to select a option in the menu, but menu wasn't found.\");\n    }\n  };\n\n  // TODO: update this to remove needsLongPress if we wanna make the user call open first always\n  openSubmenu = async (opts: {submenuTrigger?: HTMLElement, submenuTriggerText?: string, needsLongPress?: boolean, interactionType?: UserOpts['interactionType']}): Promise<MenuTester | null> => {\n    let {\n      submenuTrigger,\n      submenuTriggerText,\n      needsLongPress,\n      interactionType = this._interactionType\n    } = opts;\n\n    let trigger = this.trigger;\n    let isDisabled = trigger.hasAttribute('disabled');\n    if (!trigger.getAttribute('aria-controls') && !isDisabled) {\n      await this.open({needsLongPress});\n    }\n    if (!isDisabled) {\n      let menu = this.menu;\n      if (menu) {\n        let submenu;\n        if (submenuTrigger) {\n          submenu = submenuTrigger;\n        } else if (submenuTriggerText) {\n          submenu = within(menu).getByText(submenuTriggerText);\n        }\n\n        let submenuTriggerTester = new MenuTester({user: this.user, interactionType: this._interactionType, root: submenu, isSubmenu: true});\n        if (interactionType === 'mouse') {\n          await this.user.pointer({target: submenu});\n          act(() => {jest.runAllTimers();});\n        } else if (interactionType === 'keyboard') {\n          await this.keyboardNavigateToOption({option: submenu});\n          await this.user.keyboard('[ArrowRight]');\n          act(() => {jest.runAllTimers();});\n        } else {\n          await submenuTriggerTester.open();\n        }\n\n\n        return submenuTriggerTester;\n      }\n    }\n\n    return null;\n  };\n\n  keyboardNavigateToOption = async (opts: {option: HTMLElement}) => {\n    let {option} = opts;\n    let options = this.options;\n    let targetIndex = options.indexOf(option);\n    if (targetIndex === -1) {\n      throw new Error('Option provided is not in the menu');\n    }\n    if (document.activeElement === this.menu) {\n      await this.user.keyboard('[ArrowDown]');\n    }\n    let currIndex = options.indexOf(document.activeElement as HTMLElement);\n    if (targetIndex === -1) {\n      throw new Error('ActiveElement is not in the menu');\n    }\n    let direction = targetIndex > currIndex ? 'down' : 'up';\n\n    for (let i = 0; i < Math.abs(targetIndex - currIndex); i++) {\n      await this.user.keyboard(`[${direction === 'down' ? 'ArrowDown' : 'ArrowUp'}]`);\n    }\n  };\n\n\n  close = async () => {\n    let menu = this.menu;\n    if (menu) {\n      act(() => menu.focus());\n      await this.user.keyboard('[Escape]');\n\n      await waitFor(() => {\n        if (document.activeElement !== this.trigger) {\n          throw new Error(`Expected the document.activeElement after closing the menu to be the menu trigger but got ${document.activeElement}`);\n        } else {\n          return true;\n        }\n      });\n\n      if (document.contains(menu)) {\n        throw new Error('Expected the menu to not be in the document after closing it.');\n      }\n    }\n  };\n\n  get trigger() {\n    if (!this._trigger) {\n      throw new Error('No trigger element found for menu.');\n    }\n    return this._trigger;\n  }\n\n  get menu() {\n    let menuId = this.trigger.getAttribute('aria-controls');\n    return menuId ? document.getElementById(menuId) : undefined;\n  }\n\n  get options(): HTMLElement[] {\n    let menu = this.menu;\n    let options: HTMLElement[] = [];\n    if (menu) {\n      options = within(menu).queryAllByRole('menuitem');\n      if (options.length === 0) {\n        options = within(menu).queryAllByRole('menuitemradio');\n        if (options.length === 0) {\n          options = within(menu).queryAllByRole('menuitemcheckbox');\n        }\n      }\n    }\n\n    return options;\n  }\n\n  get sections() {\n    let menu = this.menu;\n    if (menu) {\n      return within(menu).queryAllByRole('group');\n    } else {\n      return [];\n    }\n  }\n\n  get submenuTriggers() {\n    let options = this.options;\n    if (options.length > 0) {\n      return this.options.filter(item => item.getAttribute('aria-haspopup') != null);\n    }\n\n    return [];\n  }\n}\n"],"names":[],"version":3,"file":"menu.main.js.map"}